version: "3"

networks:
 dqm-net:
  driver: bridge

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:11 #konga not working with latest
    restart: unless-stopped
    networks:
      - dqm-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: 54MLngFqFYHW3LjvZJws
    ports:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.6.0
    command: "kong migrations bootstrap"
    networks:
      - dqm-net
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: 54MLngFqFYHW3LjvZJws
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.6.0
    restart: unless-stopped
    networks:
      - dqm-net
    environment:
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: 54MLngFqFYHW3LjvZJws
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "5001:8001"
      - "80:8000"

  #######################################
  # Kong admin ui
  #######################################
  kong-admin-ui:
    image: pocketdigi/kong-admin-ui:0.5.3
    networks:
      - dqm-net
    depends_on:
      - kong
    ports:
      - "5003:80"

  #######################################
  # Django RestFramework: Auth service
  #######################################
  auth-service:
    image: dqm/auth-service:0.1
    build:
      context: $PWD/dqm_auth_service
    restart: unless-stopped
    depends_on:
      - auth-database
    networks:
      - dqm-net
    ports:
      - "5005:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://auth-service:8000"]
      interval: 5s
      timeout: 2s
      retries: 15
    environment:
      DJANGO_SETTINGS_MODULE: "core.settings.dev"
      DJANGO_SUPERUSER_EMAIL: admin@admin.com
      DJANGO_SUPERUSER_PASSWORD: admin1234
      PROD_DB_ENGINE: 'django.db.backends.postgresql'
      PROD_DB_HOST: auth-database
      PROD_DB_NAME: drf
      PROD_DB_USER: drf
      DB_PASSWORD: 54MLngFqFYHW3LjvZJws

  #######################################
  # Postgres: auth-service DB
  #######################################
  auth-database:
    image: postgres:11
    restart: unless-stopped
    networks:
      - dqm-net
    environment:
      POSTGRES_USER: drf
      POSTGRES_DB: drf
      POSTGRES_PASSWORD: 54MLngFqFYHW3LjvZJws
    ports:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "drf"]
      interval: 5s
      timeout: 5s
      retries: 5

  #######################################
  # FastAPI: Task Manager service
  #######################################
  task-manager:
    image: dqm/task-manager:0.1
    build:
      context: $PWD/dqm_task_manager
    restart: unless-stopped
    depends_on:
      - task-queue-db
    networks:
      - dqm-net
    ports:
      - "5006:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://task-manager:8000"]
      interval: 5s
      timeout: 2s
      retries: 15
    environment:
      TZ: "UTC"
      RESULT_BACKEND: "redis://task-queue-db:6379"
      BROKER_URI: "redis://task-queue-db:6379/0"


  #######################################
  # Redis: Task message queue DB
  #######################################
  task-queue-db:
    image: redis
    networks:
      - dqm-net
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    environment:
      TZ: "UTC"

  #######################################
  # Celery: Task queue monitoring
  #######################################
  task-monitor:
    image: dqm/task_monitor:0.1
    build:
      context: $PWD/dqm_task_monitor
    restart: unless-stopped
    depends_on:
      - task-queue-db
    networks:
      - dqm-net
    ports:
      - "5007:5555"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://task-monitor:5555"]
      interval: 5s
      timeout: 2s
      retries: 15
    environment:
      TZ: "UTC"
      BROKER_URI: "redis://task-queue-db:6379"

  #######################################
  # Celery: PageSpeed Task Worker PageSpeed
  #######################################
  task-worker-pagespeed:
    image: dqm/task-worker-pagespeed:0.1
    build:
      context: $PWD/dqm_task_worker_pagespeed
    restart: unless-stopped
    depends_on:
      - task-queue-db
    networks:
      - dqm-net
    environment:
      TZ: "UTC"
      RESULT_BACKEND: "redis://task-queue-db:6379"
      BROKER_URI: "redis://task-queue-db:6379/0"
      PAGESPEED_API_KEY: "TOP_secret_key"
      PAGESPEED_API_URL: "https://www.googleapis.com/pagespeedonline/v5/runPagespeed"
      REPORT_URL: "http://report-manager:8000/pagespeed/"

  #######################################
  # FastAPI: Report Manager service
  #######################################
  report-manager:
    image: dqm/report-manager:0.1
    build:
      context: $PWD/dqm_report_manager
    restart: unless-stopped
    depends_on:
      - report-db
    networks:
      - dqm-net
    ports:
      - "5008:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://report-manager:8000"]
      interval: 5s
      timeout: 2s
      retries: 15
    environment:
      TZ: "UTC"
      MONGO_URL: "mongodb://report-db:27017"

  #######################################
  # MongoDB: Report DB
  #######################################
  report-db:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: txqCtN0pKblKM7UgMR5h
    restart: unless-stopped
    networks:
      - dqm-net
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongo", "report-db:27017/test", "--quiet"]
      interval: 10s
      timeout: 10s
      retries: 15
    environment:
      TZ: "UTC"
